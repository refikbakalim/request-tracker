version: '3.7'

services:
  mongodb:
    container_name: mongodb
    image: mongo:latest
    volumes:
      - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
      - mongodb_data_container:/data/db
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_DATABASE=datab
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=rootpassword
    restart: on-failure
  zookeeper:
    container_name: zookeeper
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181" 
    restart: on-failure
  kafka:
    container_name: kafka
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment: 
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "LogTopic:1:1"
    depends_on:
      - zookeeper
    restart: on-failure
  server:
    container_name: server
    ports:
      - "8080:80"
    build: 
      context: ${PWD}/server
    restart: on-failure
    volumes:
      - log:/work/log
  consumer:
    container_name: consumer
    build: 
      context: ${PWD}/consumer
    depends_on:
      - kafka
      - mongodb
    restart: on-failure
  producer:
    container_name: producer
    build: 
      context: ${PWD}/producer
    restart: on-failure
    volumes:
      - log:/work/log
    depends_on:
      - kafka
      - server

volumes:
  log:
  mongodb_data_container: